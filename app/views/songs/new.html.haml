- content_for :sub_content do
  - form_for(Song.new, :url => user_songs_path, :html => {:multipart => true}) do |form|
    .title
      %label Song title
      = form.text_field(:title, :class => 'floatright', :size => 33)

    .category
      %label Category
      = form.collection_select(:category_id, Category.all, :id, :name, {:prompt => true})
    .divider

    .track
      %label Track title
      %input.floatright{:name => "textfieldName", :size => "33", :type => "text"}/
    .playdelete
      %a{:href => "#"}
        %img{:alt => "", :border => "0", :height => "26", :src => "/images/play_btn.png", :width => "26"}/
      %a{:href => "#"}
        %img{:border => "0", :height => "26", :src => "/images/trashcan.png", :title => "Delete", :width => "26"}/

    .addtrack
      %a{:href => "#"}
        %img{:alt => "", :border => "0", :height => "23", :src => "/images/add_track_btn.png", :width => "77"}/
    .divider

    .copyrights
      .radio
        %input{:checked => "checked", :name => "checkboxname", :type => "checkbox", :value => "checkboxValue"}/
        %label I am the original artist behind this track
      .checkbox
        %input{:checked => "checked", :name => "checkboxName", :type => "checkbox", :value => "checkboxValue"}/
        %label I accept that Koblo.com takes 50%
      .checkbox
        %input{:checked => "checked", :name => "checkboxName", :type => "checkbox", :value => "checkboxValue"}/
        %label I have the rights to this track
      .checkbox
        %input{:checked => "checked", :name => "checkboxName", :type => "checkbox", :value => "checkboxValue"}/
        %label I will pay KODA myself
    .divider

    .price
      %h1 Price
      .valuta
        %select{:name => "selectName", :size => "1"}
          %option EUR
          %option USD
          %option DKK
      .type
        %label Multitrack
        %input.floatright{:name => "textfieldName", :size => "1", :type => "text", :value => "5"}/
      .type
        %label Mp3
        %input.floatright{:name => "textfieldName", :size => "1", :type => "text", :value => "2"}/
      .type
        %label Ringtone
        %input.floatright{:name => "textfieldName", :size => "1", :type => "text", :value => "1"}/
    .divider
    .socialmedia
      .checkbox
        %input{:checked => "checked", :name => "checkboxName", :type => "checkbox", :value => "checkboxValue"}/
        %label Show track on Facebook
      .checkbox
        %input{:checked => "checked", :name => "checkboxName", :type => "checkbox", :value => "checkboxValue"}/
        %label Twit track on Twitter
      .checkbox
        %input{:checked => "checked", :name => "checkboxName", :type => "checkbox", :value => "checkboxValue"}/
        %label Share track on Myspace
    .divider
    .finish
      %input{:alt => "", :src => "finish.png", :type => "image"}/
    %div{:style => "clear: left;"}       .bottom

  #song_upload
    - semantic_form_for(Song.new, :url => user_songs_path, :html => {:multipart => true}) do |form|
      - form.inputs do
        = form.input :title, :label => 'Song Title'
        = form.input :category
        = form.inputs :title, :for => :tracks, :name => 'Track Title'
        = form.buttons :id => 'new_song_button'

    - semantic_form_for(Track.new, :url => user_tracks_path, :html => {:multipart => true}) do |form|
      - form.inputs do
        = form.input :uploaded_data, :as => :file
        = form.buttons

    - content_for :document_ready do
      $('#track_submit').hide();
      - session_key_name = '_koblo2_session' # request.session_options[:key]
      $('#track_uploaded_data_input').uploadify({
      uploader      : '/javascripts/uploadify/uploadify.swf',
      script        : '#{user_tracks_path}',
      fileDataName  : $('#track_uploaded_data_input input:file')[0].name, 
      buttonText    : 'add tracks',
      auto          : true,
      multi         : true,
      simUploadLimit : 4,
      fileExt       : '*.mp3;*.wav;*.aac;*.wma',
      fileDesc      : 'Audio Files',
      cancelImg     : '/images/cancel.png',
      onComplete    : function(event, queueID, fileObj, response, data) { eval(response); return false },
      scriptData    : {
      'format': 'js', 
      '#{session_key_name}' : encodeURIComponent('#{u cookies[session_key_name]}'),
      'authenticity_token'  : encodeURIComponent('#{u form_authenticity_token}') 
      },
      });

